CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(dcm-service C CXX)
SET(VERSION_MAJOR 1)
SET(VERSION "${VERSION_MAJOR}.0.0")

SET(DCMSVC-LIB "dcm-service")
SET(DCMFACE-LIB "dcm-face")
SET(DCMUTIL-LIB "dcm-util")
SET(SRCS
	src/DcmColorUtils.cpp
	src/DcmDbUtils.cpp
	src/DcmFaceUtils.cpp
	src/DcmIpcUtils.cpp
	src/DcmScanSvc.cpp
	)

SET(FACE_SRCS
	libdcm-face/dcm-face.c
	libdcm-face/dcm-face_mediavision.c
	)

SET(UTIL_SRCS
	libdcm-util/dcm_image_codec.cpp
	)

SET(VENDOR "samsung")
SET(PACKAGE ${PROJECT_NAME})
SET(PKGNAME "com.${VENDOR}.${PACKAGE}")
SET(PREFIX ${CMAKE_INSTALL_PREFIX})
SET(BINDIR "${PREFIX}/bin")
SET(DATADIR "${PREFIX}/share")
SET(EXEC_PREFIX "\${prefix}")
SET(LIBDIR "\${prefix}/lib")
SET(INCLUDEDIR "\${prefix}/include")

IF("${CMAKE_BUILD_TYPE}" STREQUAL "")
	SET(CMAKE_BUILD_TYPE "Release")
ENDIF("${CMAKE_BUILD_TYPE}" STREQUAL "")
MESSAGE("Build type: ${CMAKE_BUILD_TYPE}")

INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/include ${CMAKE_SOURCE_DIR}/libdcm-util/include ${CMAKE_SOURCE_DIR}/libdcm-face/include)

INCLUDE(FindPkgConfig)
pkg_check_modules(pkgs REQUIRED glib-2.0 gthread-2.0 dlog sqlite3 capi-media-image-util capi-media-vision
media-thumbnail libmedia-utils mmutil-imgp uuid vconf libtzplatform-config)

FOREACH(flag ${pkgs_CFLAGS})
	SET(EXTRA_CFLAGS "${EXTRA_CFLAGS} ${flag}")
ENDFOREACH(flag)

SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${EXTRA_CFLAGS} -fPIC -Wall -Werror")
SET(CMAKE_C_FLAGS_DEBUG "-O0 -g")
SET(CMAKE_C_FLAGS_RELEASE "-O2 -fPIC")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${EXTRA_CFLAGS} -fpermissive -fdump-rtl-expand -fPIC -Wall")
SET(CMAKE_CXX_FLAGS_DEBUG "-O0 -g")
SET(CMAKE_CXX_FLAGS_RELEASE "-O2 -fPIC")

FIND_PROGRAM(UNAME NAMES uname)
EXEC_PROGRAM("${UNAME}" ARGS "-m" OUTPUT_VARIABLE "ARCH")
IF("${ARCH}" STREQUAL "arm")
	ADD_DEFINITIONS("-DTARGET")
	MESSAGE("add -DTARGET")
ENDIF("${ARCH}" STREQUAL "arm")

ADD_DEFINITIONS("-DVENDOR=\"${VENDOR}\"")
ADD_DEFINITIONS("-DPACKAGE=\"${PACKAGE}\"")
ADD_DEFINITIONS("-DPACKAGE_NAME=\"${PKGNAME}\"")
ADD_DEFINITIONS("-DPREFIX=\"${PREFIX}\"")
#ADD_DEFINITIONS("-D_PERFORMANCE_CHECK_")

SET(CMAKE_EXE_LINKER_FLAGS "-Wl,--as-needed -Wl,--hash-style=both")
CONFIGURE_FILE(dcm-service.pc.in dcm-service.pc @ONLY)
INSTALL(FILES ${CMAKE_CURRENT_BINARY_DIR}/dcm-service.pc DESTINATION ${LIB_INSTALL_DIR}/pkgconfig)

ADD_SUBDIRECTORY(svc)
#ADD_SUBDIRECTORY(test)

LINK_DIRECTORIES(${LIB_INSTALL_DIR})

#AUX_SOURCE_DIRECTORY(${CMAKE_SOURCE_DIR}/src SRCS)
ADD_LIBRARY(${DCMFACE-LIB} SHARED ${FACE_SRCS})
SET_TARGET_PROPERTIES(${DCMFACE-LIB} PROPERTIES SOVERSION ${VERSION_MAJOR})
SET_TARGET_PROPERTIES(${DCMFACE-LIB} PROPERTIES VERSION ${VERSION})
ADD_LIBRARY(${DCMUTIL-LIB} SHARED ${UTIL_SRCS})
SET_TARGET_PROPERTIES(${DCMUTIL-LIB} PROPERTIES SOVERSION ${VERSION_MAJOR})
SET_TARGET_PROPERTIES(${DCMUTIL-LIB} PROPERTIES VERSION ${VERSION})
ADD_LIBRARY(${DCMSVC-LIB} SHARED ${SRCS})
TARGET_LINK_LIBRARIES(${DCMSVC-LIB} ${pkgs_LDFLAGS} ${DCMFACE-LIB} ${DCMUTIL-LIB} ${pkgs_LIBRARIES})
SET_TARGET_PROPERTIES(${DCMSVC-LIB} PROPERTIES SOVERSION ${VERSION_MAJOR})
SET_TARGET_PROPERTIES(${DCMSVC-LIB} PROPERTIES VERSION ${VERSION})

INSTALL(TARGETS ${DCMFACE-LIB} LIBRARY DESTINATION ${LIB_INSTALL_DIR})
INSTALL(TARGETS ${DCMUTIL-LIB} LIBRARY DESTINATION ${LIB_INSTALL_DIR})
INSTALL(TARGETS ${DCMSVC-LIB} LIBRARY DESTINATION ${LIB_INSTALL_DIR})

